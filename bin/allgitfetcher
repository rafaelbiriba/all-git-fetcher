#!/bin/bash
# Created by Rafael Biriba
# Email: biribarj@gmail.com
# Documentation at github.com/rafaelbiriba/all-git-fetcher
# Short description:
# Update all git directories below current directory or specified directory
# Skips directories that contain a file called .allfetch_ignore

######## VERSION ########
VERSION="0.1.2"

BLUE='\e[0;34m'
RED='\e[0;31m'
YELLOW='\e[0;33m'
YELLOWUNDER='\e[4;33m'
GREEN='\e[0;32m'
WHITE='\e[0m'
WHITEUNDER='\e[4;37m'
TITLE='\e[30;43m'

function update {
  local path="$1"
  if [ -d "$path" ]; then
    cd -- "$path" > /dev/null
    if [ -d ".git" ]; then
      current_path=`pwd`
      printf "${YELLOW}#${WHITE} ${WHITE}Project ${WHITEUNDER}${current_path#$running_directory}${WHITE}: \n"
      printf "       "

      if [ -e ".allfetch_ignore" ]; then
        printf "${RED}Ignored: .allfetch_ignore detected... "
        printf "${WHITE}--- ${GREEN}ALL DONE"
        return;
      fi

      if [[ -z `grep "fetch" .git/config` ]]; then
        printf "${RED}Ignored: No remote detected to fetch... "
        printf "${WHITE}--- ${GREEN}ALL DONE"
        return;
      fi

      printf "${YELLOW}Git Fetching... "
      git fetch > /dev/null 2>&1
      printf "${GREEN}OK! "
      status=`git status`
      branch=`get_git_branch`

      printf "${WHITE}- ${YELLOW}Git Rebasing origin/${YELLOWUNDER}${branch}${YELLOW}... "

      if [[ "$status" =~ "nothing to commit" ]]; then
        git rebase origin/${branch} > /dev/null 2>&1
        printf "${GREEN}OK! "
      else
        printf "${RED}Ignored: Modifications not committed! "
      fi

      printf "${WHITE}--- ${GREEN}ALL DONE!!!\n"
    else
      scan *
    fi

    cd .. > /dev/null
  fi
}

function scan {
  for x in $*; do
    update "$x"
  done
}

function get_git_branch {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo "${ref#refs/heads/}"
}

running_directory=`pwd`/
printf "\n${YELLOW}###${WHITE} ${TITLE}  ALL GIT Fetcher  ${WHITE} ${YELLOW}###${WHITE}\n"
printf "  Version ${RED}${VERSION}${WHITE}\n"
printf "  New versions, issues reports, documentations at:\n"
printf "  github.com/rafaelbiriba/all-git-fetcher\n"
printf "${YELLOW}############################${WHITE}\n\n"
printf "${YELLOW}#${WHITE} ${WHITE}Scanning for local projects directories at ${YELLOW}${running_directory}${WHITE}: \n\n"
scan *
printf "\n\n"
